<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Tarana-Fundamentals of Data Analystics</title>
    <link>/post/</link>
    <description>Recent content in Posts on Tarana-Fundamentals of Data Analystics</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 15 Jun 2021 00:00:00 +0000</lastBuildDate><atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Fiting and Interpreting Models</title>
      <link>/2021/06/15/fiting-and-interpreting-models/</link>
      <pubDate>Tue, 15 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>/2021/06/15/fiting-and-interpreting-models/</guid>
      <description>Import Libraries  # Models with numerical explanatory variables  Data: Paris Paintings pp &amp;lt;- read_csv(&amp;quot;paris-paintings.csv&amp;quot;, na = c(&amp;quot;n/a&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;NA&amp;quot;))  Number of observations: 3393 Number of variables: 61   Goal: Predict height from width ## Step 1: Specify model
## Linear Regression Model Specification (regression)  Step 2: Set model fittung “engine” linear_reg() %&amp;gt;% set_engine(&amp;quot;lm&amp;quot;) #linear model  Step 3: Fit model and estimate parameters ## # A tibble: 2 x 5 ## term estimate std.</description>
    </item>
    
    <item>
      <title>Total funded expense actuals by agency name</title>
      <link>/2021/06/10/total-funded-expense-actuals-by-agency-name/</link>
      <pubDate>Thu, 10 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>/2021/06/10/total-funded-expense-actuals-by-agency-name/</guid>
      <description>  Funded expense actuals by agency name from non-federal dataset of USA The small and simple interactive visualization represents the top five agency name those are funded by the actual expenses according to year 2015, 2016 &amp;amp; 2017.
&amp;lt;iframe src=“https://taranaislam.shinyapps.io/mydataworld/”, height = “800” width = “100%” frameborder = “no”&amp;gt;
 </description>
    </item>
    
    <item>
      <title>Assignment 03</title>
      <link>/2021/06/04/assignment-03/</link>
      <pubDate>Fri, 04 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>/2021/06/04/assignment-03/</guid>
      <description>Importing lego_sales.csv file ## # A tibble: 6 x 14 ## first_name last_name age phone_number set_id number theme subtheme year ## &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt; ## 1 Kimberly Beckstead 24 216-555-2549 24701 76062 DC Comi… Mighty M… 2018 ## 2 Neel Garvin 35 819-555-3189 25626 70595 Ninjago Rise of … 2018 ## 3 Neel Garvin 35 819-555-3189 24665 21031 Archite… &amp;lt;NA&amp;gt; 2018 ## 4 Chelsea Bouchard 41 &amp;lt;NA&amp;gt; 24695 31048 Creator &amp;lt;NA&amp;gt; 2018 ## 5 Chelsea Bouchard 41 &amp;lt;NA&amp;gt; 25626 70595 Ninjago Rise of … 2018 ## 6 Chelsea Bouchard 41 &amp;lt;NA&amp;gt; 24721 10831 Duplo &amp;lt;NA&amp;gt; 2018 ## # … with 5 more variables: name &amp;lt;chr&amp;gt;, pieces &amp;lt;dbl&amp;gt;, us_price &amp;lt;dbl&amp;gt;, ## # image_url &amp;lt;chr&amp;gt;, quantity &amp;lt;dbl&amp;gt;  1.</description>
    </item>
    
    <item>
      <title>Data Import Assignment</title>
      <link>/2021/06/01/data-import-assignment/</link>
      <pubDate>Tue, 01 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>/2021/06/01/data-import-assignment/</guid>
      <description>Import Nobel.csv file library(tidyverse) ## ── Attaching packages ─────────────────────────────────────── tidyverse 1.3.1 ── ## ✓ ggplot2 3.3.3 ✓ purrr 0.3.4 ## ✓ tibble 3.1.2 ✓ dplyr 1.0.6 ## ✓ tidyr 1.1.3 ✓ stringr 1.4.0 ## ✓ readr 1.4.0 ✓ forcats 0.5.1 ## ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ── ## x dplyr::filter() masks stats::filter() ## x dplyr::lag() masks stats::lag() nobel &amp;lt;- read_csv(file = &amp;quot;nobel.csv&amp;quot;) ## ## ── Column specification ──────────────────────────────────────────────────────── ## cols( ## .</description>
    </item>
    
    <item>
      <title>Data Recode Assignment</title>
      <link>/2021/06/01/data-recode-assignment/</link>
      <pubDate>Tue, 01 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>/2021/06/01/data-recode-assignment/</guid>
      <description>Import and Transform Religion-income.csv library(readxl) library(dplyr) ## ## Attaching package: &amp;#39;dplyr&amp;#39; ## The following objects are masked from &amp;#39;package:stats&amp;#39;: ## ## filter, lag ## The following objects are masked from &amp;#39;package:base&amp;#39;: ## ## intersect, setdiff, setequal, union library(tidyr) library(tidyverse) ## ── Attaching packages ─────────────────────────────────────── tidyverse 1.3.1 ── ## ✓ ggplot2 3.3.3 ✓ purrr 0.3.4 ## ✓ tibble 3.1.2 ✓ stringr 1.4.0 ## ✓ readr 1.4.0 ✓ forcats 0.5.1 ## ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ── ## x dplyr::filter() masks stats::filter() ## x dplyr::lag() masks stats::lag() rel_inc &amp;lt;- read_excel(&amp;quot;relig-income.</description>
    </item>
    
    <item>
      <title>Assignment A02: TIDYVERSE</title>
      <link>/2021/05/26/assignment-a02-tidyverse/</link>
      <pubDate>Wed, 26 May 2021 00:00:00 +0000</pubDate>
      
      <guid>/2021/05/26/assignment-a02-tidyverse/</guid>
      <description>For using one table verb functions,I have chosen heart failure clinical records dataset. Heart failure is a common event caused by CVDs and this dataset contains 12 features that can be used to predict mortality by heart failure. I have applied two functions only here.
library(tidyverse) heartdisease &amp;lt;- read_csv(&amp;quot;heart_failure_clinical_records_dataset.csv&amp;quot;) #head(heart_failure_clinical_records_dataset) head(heartdisease) ## # A tibble: 6 x 13 ## age anaemia creatinine_phosphok… diabetes ejection_fracti… high_blood_press… ## &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; ## 1 75 0 582 0 20 1 ## 2 55 0 7861 0 38 0 ## 3 65 0 146 0 20 0 ## 4 50 1 111 0 20 0 ## 5 65 1 160 1 20 0 ## 6 90 1 47 0 40 1 ## # … with 7 more variables: platelets &amp;lt;dbl&amp;gt;, serum_creatinine &amp;lt;dbl&amp;gt;, ## # serum_sodium &amp;lt;dbl&amp;gt;, sex &amp;lt;dbl&amp;gt;, smoking &amp;lt;dbl&amp;gt;, time &amp;lt;dbl&amp;gt;, DEATH_EVENT &amp;lt;dbl&amp;gt; One table verb functions heartdisease %&amp;gt;% filter(diabetes == 1, age &amp;gt;= 50) %&amp;gt;% arrange(desc(serum_creatinine)) %&amp;gt;% select(diabetes, age, serum_creatinine) ## # A tibble: 104 x 3 ## diabetes age serum_creatinine ## &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; ## 1 1 60 6.</description>
    </item>
    
    <item>
      <title>Data Wrangling using Tidyverse</title>
      <link>/2021/05/25/data-wrangling-using-tidyverse/</link>
      <pubDate>Tue, 25 May 2021 00:00:00 +0000</pubDate>
      
      <guid>/2021/05/25/data-wrangling-using-tidyverse/</guid>
      <description>Imports the Hotels .csv file library(tidyverse) ## ── Attaching packages ─────────────────────────────────────── tidyverse 1.3.1 ── ## ✓ ggplot2 3.3.3 ✓ purrr 0.3.4 ## ✓ tibble 3.1.2 ✓ dplyr 1.0.6 ## ✓ tidyr 1.1.3 ✓ stringr 1.4.0 ## ✓ readr 1.4.0 ✓ forcats 0.5.1 ## ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ── ## x dplyr::filter() masks stats::filter() ## x dplyr::lag() masks stats::lag() hotels &amp;lt;- read_csv(&amp;quot;hotels.csv&amp;quot;) ## ## ── Column specification ──────────────────────────────────────────────────────── ## cols( ## .</description>
    </item>
    
    <item>
      <title>Fun with R</title>
      <link>/2021/05/25/fun-with-r/</link>
      <pubDate>Tue, 25 May 2021 00:00:00 +0000</pubDate>
      
      <guid>/2021/05/25/fun-with-r/</guid>
      <description>Variables and Numbers x &amp;lt;- 1 y = 2 3 -&amp;gt; z x + y ## [1] 3 y * z ## [1] 6 y/x ## [1] 2  Vectors a &amp;lt;- 0:10 print(a) ## [1] 0 1 2 3 4 5 6 7 8 9 10 b &amp;lt;- 10:-4 print(b) ## [1] 10 9 8 7 6 5 4 3 2 1 0 -1 -2 -3 -4 class(a) ## [1] &amp;quot;integer&amp;quot; str(a) ## int [1:11] 0 1 2 3 4 5 6 7 8 9 .</description>
    </item>
    
    <item>
      <title>Assignment A01</title>
      <link>/2021/05/20/assignment-a01/</link>
      <pubDate>Thu, 20 May 2021 00:00:00 +0000</pubDate>
      
      <guid>/2021/05/20/assignment-a01/</guid>
      <description>Titanic (titanic_train) Data Visualization  Short story behind the data sets  The sinking of the Titanic is one of the most infamous shipwrecks in history.
On April 15, 1912, during her maiden voyage, the widely considered “unsinkable” RMS Titanic sank after colliding with an iceberg. Unfortunately, there weren’t enough lifeboats for everyone onboard, resulting in the death of 1502 out of 2224 passengers and crew.
 Data at a glance  Titanic is an R package containing data sets,titanic_train and titanic_test.</description>
    </item>
    
    <item>
      <title>Data and Visualization</title>
      <link>/2021/05/18/data-and-visualization/</link>
      <pubDate>Tue, 18 May 2021 00:00:00 +0000</pubDate>
      
      <guid>/2021/05/18/data-and-visualization/</guid>
      <description>Data Visualization Excercise library(dplyr) starwars ## # A tibble: 87 x 14 ## name height mass hair_color skin_color eye_color birth_year sex gender ## &amp;lt;chr&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; ## 1 Luke S… 172 77 blond fair blue 19 male mascu… ## 2 C-3PO 167 75 &amp;lt;NA&amp;gt; gold yellow 112 none mascu… ## 3 R2-D2 96 32 &amp;lt;NA&amp;gt; white, bl… red 33 none mascu… ## 4 Darth … 202 136 none white yellow 41.</description>
    </item>
    
    <item>
      <title>Data visualization using ggplot2</title>
      <link>/2021/05/18/data-visualization-using-ggplot2/</link>
      <pubDate>Tue, 18 May 2021 00:00:00 +0000</pubDate>
      
      <guid>/2021/05/18/data-visualization-using-ggplot2/</guid>
      <description>  Palmer Penguins Data Analysis  </description>
    </item>
    
  </channel>
</rss>
